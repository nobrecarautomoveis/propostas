// Script para debugar o banco de produ√ß√£o real
const { ConvexHttpClient } = require("convex/browser");

// Vamos tentar as poss√≠veis URLs de produ√ß√£o
const possibleUrls = [
  "https://knowing-chickadee-162.convex.cloud", // DEV atual
  "https://focused-walrus-736.convex.cloud",    // PROD mencionado antes
  "https://propostas.nobrecarautomoveis.com.br/.netlify/functions/convex", // Netlify
  "https://propostas-nobrecar.convex.cloud",    // Poss√≠vel nome
  "https://nobrecar-propostas.convex.cloud",    // Poss√≠vel nome
];

async function debugProductionDB() {
  try {
    console.log("üîç PROCURANDO O BANCO DE PRODU√á√ÉO REAL...");
    console.log("=" * 50);
    
    for (const url of possibleUrls) {
      console.log(`\nüß™ Testando: ${url}`);
      
      try {
        const client = new ConvexHttpClient(url);
        
        // Tenta buscar usu√°rios
        const users = await client.action("userActions:debugUsers", {});
        console.log(`   ‚úÖ CONECTOU! Usu√°rios encontrados: ${users.length}`);
        
        // Lista usu√°rios
        users.forEach(user => {
          console.log(`      - ${user.name} (${user.email})`);
        });
        
        // Busca propostas
        const proposals = await client.query("proposals:getAllProposalsRaw", {});
        console.log(`   üìä Propostas encontradas: ${proposals.length}`);
        
        proposals.forEach(p => {
          console.log(`      - ${p.proposalNumber} (${new Date(p._creationTime).toLocaleString()})`);
        });
        
        // Se encontrou a PROP-001, este √© o banco correto!
        const prop001 = proposals.find(p => p.proposalNumber === "PROP-001");
        if (prop001) {
          console.log(`\nüéØ BANCO CORRETO ENCONTRADO! ${url}`);
          console.log(`   ‚úÖ PROP-001 encontrada: ${prop001._id}`);
          console.log(`   üë§ SalespersonId: ${prop001.salespersonId}`);
          
          // Testa o usu√°rio da PROP-001
          if (prop001.salespersonId) {
            try {
              const user = await client.query("users:getCurrentUser", {
                userId: prop001.salespersonId
              });
              if (user) {
                console.log(`   ‚úÖ Usu√°rio v√°lido: ${user.name} (${user.email})`);
              } else {
                console.log(`   ‚ùå Usu√°rio n√£o encontrado: ${prop001.salespersonId}`);
              }
            } catch (error) {
              console.log(`   üí• Erro ao buscar usu√°rio: ${error.message}`);
            }
          }
          
          return; // Para aqui se encontrou o banco correto
        }
        
      } catch (error) {
        console.log(`   ‚ùå Falhou: ${error.message}`);
      }
    }
    
    console.log("\n" + "=" * 50);
    console.log("ü§î NENHUM BANCO COM PROP-001 ENCONTRADO");
    console.log("üí° O frontend pode estar usando uma URL diferente ou h√° cache local");
    
  } catch (error) {
    console.error("üí• ERRO CR√çTICO:", error);
  }
}

debugProductionDB();
